<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Core Development on PrestaShop Developer Documentation</title>
    <link>https://devdocs.prestashop.com/1.7/development/</link>
    <description>Recent content in Core Development on PrestaShop Developer Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 16 Aug 2018 15:58:29 +0200</lastBuildDate>
    
	<atom:link href="https://devdocs.prestashop.com/1.7/development/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Native module translation</title>
      <link>https://devdocs.prestashop.com/1.7/development/native-module-translation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/native-module-translation/</guid>
      <description>Module translation The module&amp;rsquo;s text strings are written in English, but you might want French, Spanish or Polish shop owners to use your module too. You therefore have to translate those strings into those languages, both the front office and the back office strings. Ideally, you should translate your module in all the languages that are installed on your shop. This could be a tedious task, but a whole system has been put in place in order to help you out.</description>
    </item>
    
    <item>
      <title>Register a new hook</title>
      <link>https://devdocs.prestashop.com/1.7/development/register-new-hook/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/register-new-hook/</guid>
      <description>How to register a new Hook in PrestaShop This is basically three steps:
 dispatch the hook in the code (in templates or PHP classes/files); update the hooks xml definition of Installer; update the hooks table for &amp;ldquo;Auto Upgrade&amp;rdquo; system;  Dispatching hooks Most of the time, you will dispatch the hook using an instance of HookDispatcher. It can be retrieved from the service container and/or injected, as it&amp;rsquo;s done for example in Form Handlers:</description>
    </item>
    
    <item>
      <title>How to compile assets</title>
      <link>https://devdocs.prestashop.com/1.7/development/compile-assets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/compile-assets/</guid>
      <description>How to compile assets Some components in PrestaShop, like Javascript or SCSS files, need to be compiled to be usable.
Requirements We use Webpack to compile assets. You only need NodeJS 8.x (get it here), NPM will take care of it all.
Assets that need to be compiled  Back Office
 Default theme  SASS files
Located in admin-dev/themes/default/sass  New theme  SCSS files
Located in admin-dev/themes/new-theme/scss JS files</description>
    </item>
    
  </channel>
</rss>